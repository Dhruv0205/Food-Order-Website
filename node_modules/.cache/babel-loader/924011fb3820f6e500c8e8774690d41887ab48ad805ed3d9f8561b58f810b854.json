{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhruv\\\\React-Project\\\\Food-Order-App\\\\src\\\\components\\\\RestaurantMenu.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Shimmer from \"./components/Shimmer\";\nimport RestaurantCategory from \"./components/RestaurantCategory\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestaurantMenu = () => {\n  _s();\n  const [resInfo, setResInfo] = useState(null);\n  const {\n    resId\n  } = useParams();\n  const [showIndex, setShowIndex] = useState(null);\n  useEffect(() => {\n    fetchMenu();\n  }, []);\n  const fetchMenu = async () => {\n    const data = await fetch(\"https://www.swiggy.com/dapi/menu/pl?page-type=REGULAR_MENU&complete-menu=true&lat=22.7611352&lng=75.8750008&restaurantId=\" + resId);\n    const json = await data.json();\n    setResInfo(json.data);\n  };\n  if (resInfo === null) return /*#__PURE__*/_jsxDEV(Shimmer, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 33\n  }, this);\n\n  //   const {name, cuisines, costForTwoMessage} = resInfo?.cards[0]?.card?.card?.info;\n\n  //   const {itemCards} = resInfo?.cards[2]?.groupedCard?.cardGroupMap?.REGULAR?.cards[2].card.card;\n\n  //   console.log(resInfo?.cards[2]?.groupedCard?.cardGroupMap?.REGULAR?.cards);\n\n  //   const categories = resInfo?.cards[2]?.groupedCard?.cardGroupMap?.REGULAR?.cards.filter(\n  //    (c) => c.card?.[\"card\"]?.[\"@type\"] === \n  //    \"type.googleapis.com/swiggy.presentation.food.v2.ItemCategory\"\n  //   );\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"font-bold my-6 text-2xl\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-bold text-lg\",\n      children: [cuisines.join(\", \"), \"- \", costForTwoMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 6\n    }, this), categories.map((category, index) => {\n      var _category$card, _category$card2;\n      return /*#__PURE__*/_jsxDEV(RestaurantCategory, {\n        data: category === null || category === void 0 ? void 0 : (_category$card2 = category.card) === null || _category$card2 === void 0 ? void 0 : _category$card2.card,\n        showItem: index === showIndex ? true : false,\n        setShowIndex: () => setShowIndex(index)\n      }, category === null || category === void 0 ? void 0 : (_category$card = category.card) === null || _category$card === void 0 ? void 0 : _category$card.card.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 10\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(RestaurantMenu, \"UWtRIPHiPAEVRcZW/imOOvd0tKA=\", false, function () {\n  return [useParams];\n});\n_c = RestaurantMenu;\nexport default RestaurantMenu;\nvar _c;\n$RefreshReg$(_c, \"RestaurantMenu\");","map":{"version":3,"names":["useEffect","useState","useParams","Shimmer","RestaurantCategory","jsxDEV","_jsxDEV","RestaurantMenu","_s","resInfo","setResInfo","resId","showIndex","setShowIndex","fetchMenu","data","fetch","json","fileName","_jsxFileName","lineNumber","columnNumber","className","children","name","cuisines","join","costForTwoMessage","categories","map","category","index","_category$card","_category$card2","card","showItem","title","_c","$RefreshReg$"],"sources":["C:/Users/dhruv/React-Project/Food-Order-App/src/components/RestaurantMenu.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Shimmer from \"./components/Shimmer\";\r\nimport RestaurantCategory from \"./components/RestaurantCategory\";\r\n\r\nconst RestaurantMenu = () =>{\r\n   const[resInfo, setResInfo] = useState(null); \r\n   const {resId} = useParams();\r\n  const[showIndex, setShowIndex] = useState(null);\r\n   useEffect(()=>{\r\n       fetchMenu(); \r\n   }, []);\r\n\r\n   const fetchMenu = async () =>{\r\n    const data = await fetch(\"https://www.swiggy.com/dapi/menu/pl?page-type=REGULAR_MENU&complete-menu=true&lat=22.7611352&lng=75.8750008&restaurantId=\"+resId)\r\n\r\n    const json = await data.json();\r\n    setResInfo(json.data);\r\n   } ;\r\n  \r\n  if( resInfo === null ) return <Shimmer />;\r\n  \r\n//   const {name, cuisines, costForTwoMessage} = resInfo?.cards[0]?.card?.card?.info;\r\n  \r\n//   const {itemCards} = resInfo?.cards[2]?.groupedCard?.cardGroupMap?.REGULAR?.cards[2].card.card;\r\n   \r\n//   console.log(resInfo?.cards[2]?.groupedCard?.cardGroupMap?.REGULAR?.cards);\r\n   \r\n//   const categories = resInfo?.cards[2]?.groupedCard?.cardGroupMap?.REGULAR?.cards.filter(\r\n//    (c) => c.card?.[\"card\"]?.[\"@type\"] === \r\n//    \"type.googleapis.com/swiggy.presentation.food.v2.ItemCategory\"\r\n//   );\r\n\r\n  return (\r\n    <div className=\"text-center\">\r\n     <h1 className=\"font-bold my-6 text-2xl\">{name}</h1>\r\n     <p className=\"font-bold text-lg\">\r\n      {cuisines.join(\", \")}- {costForTwoMessage}\r\n     </p>\r\n       \r\n       {/* control component because parent is controlling when to show the items*/}\r\n      {/* categories accordians */}\r\n      {categories.map((category, index)=>(\r\n         <RestaurantCategory \r\n         key={category?.card?.card.title} \r\n         data={category?.card?.card} \r\n         showItem = {index === showIndex ? true : false}\r\n         setShowIndex={()=> setShowIndex(index)}\r\n         />\r\n      ))}\r\n\r\n     {/* <ul> \r\n        { itemCards.map( (item) =>\r\n        <li key={item.card.info.id}> \r\n             {item.card.info.name} - {\"Rs. \"} {item.card.info.price/100}\r\n        </li>\r\n        ) }\r\n     </ul>\r\n   */}\r\n     </div>\r\n  );\r\n};\r\n\r\nexport default RestaurantMenu;"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,kBAAkB,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,cAAc,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACzB,MAAK,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC3C,MAAM;IAACU;EAAK,CAAC,GAAGT,SAAS,CAAC,CAAC;EAC5B,MAAK,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC9CD,SAAS,CAAC,MAAI;IACVc,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAW;IAC5B,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,2HAA2H,GAACL,KAAK,CAAC;IAE3J,MAAMM,IAAI,GAAG,MAAMF,IAAI,CAACE,IAAI,CAAC,CAAC;IAC9BP,UAAU,CAACO,IAAI,CAACF,IAAI,CAAC;EACtB,CAAC;EAEF,IAAIN,OAAO,KAAK,IAAI,EAAG,oBAAOH,OAAA,CAACH,OAAO;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;;EAE3C;;EAEA;;EAEA;;EAEA;EACA;EACA;EACA;;EAEE,oBACEf,OAAA;IAAKgB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC3BjB,OAAA;MAAIgB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAEC;IAAI;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnDf,OAAA;MAAGgB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,GAC9BE,QAAQ,CAACC,IAAI,CAAC,IAAI,CAAC,EAAC,IAAE,EAACC,iBAAiB;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,EAIFO,UAAU,CAACC,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK;MAAA,IAAAC,cAAA,EAAAC,eAAA;MAAA,oBAC7B3B,OAAA,CAACF,kBAAkB;QAEnBW,IAAI,EAAEe,QAAQ,aAARA,QAAQ,wBAAAG,eAAA,GAARH,QAAQ,CAAEI,IAAI,cAAAD,eAAA,uBAAdA,eAAA,CAAgBC,IAAK;QAC3BC,QAAQ,EAAIJ,KAAK,KAAKnB,SAAS,GAAG,IAAI,GAAG,KAAM;QAC/CC,YAAY,EAAEA,CAAA,KAAKA,YAAY,CAACkB,KAAK;MAAE,GAHlCD,QAAQ,aAARA,QAAQ,wBAAAE,cAAA,GAARF,QAAQ,CAAEI,IAAI,cAAAF,cAAA,uBAAdA,cAAA,CAAgBE,IAAI,CAACE,KAAK;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAI9B,CAAC;IAAA,CACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAUE,CAAC;AAEX,CAAC;AAACb,EAAA,CAxDID,cAAc;EAAA,QAEDL,SAAS;AAAA;AAAAmC,EAAA,GAFtB9B,cAAc;AA0DpB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}